package org.example.userrepodetails.entity.git_api_json.repos

import com.fasterxml.jackson.annotation.JsonProperty

data class RepoJson (
  @JsonProperty("id") val id: Int = -1,
  @JsonProperty("node_id") val nodeId: String = "null",
  @JsonProperty("name") val name: String = "null",
  @JsonProperty("full_name") val fullName: String = "null",
  @JsonProperty("owner") val owner: Owner = Owner(),
  @JsonProperty("private") val private: Boolean = false,
  @JsonProperty("html_url") val htmlUrl: String = "null",
  @JsonProperty("description") val description: String? = "null",
  @JsonProperty("fork") val fork: Boolean = false,
  @JsonProperty("url") val url: String = "null",
  @JsonProperty("archive_url") val archiveUrl: String = "null",
  @JsonProperty("assignees_url") val assigneesUrl: String = "null",
  @JsonProperty("blobs_url") val blobsUrl: String = "null",
  @JsonProperty("branches_url") val branchesUrl: String = "null",
  @JsonProperty("collaborators_url") val collaboratorsUrl: String = "null",
  @JsonProperty("comments_url") val commentsUrl: String = "null",
  @JsonProperty("commits_url") val commitsUrl: String = "null",
  @JsonProperty("compare_url") val compareUrl: String = "null",
  @JsonProperty("contents_url") val contentsUrl: String = "null",
  @JsonProperty("contributors_url") val contributorsUrl: String = "null",
  @JsonProperty("deployments_url") val deploymentsUrl: String = "null",
  @JsonProperty("downloads_url") val downloadsUrl: String = "null",
  @JsonProperty("events_url") val eventsUrl: String = "null",
  @JsonProperty("forks_url") val forksUrl: String = "null",
  @JsonProperty("git_commits_url") val gitCommitsUrl: String = "null",
  @JsonProperty("git_refs_url") val gitRefsUrl: String = "null",
  @JsonProperty("git_tags_url") val gitTagsUrl: String = "null",
  @JsonProperty("git_url") val gitUrl: String = "null",
  @JsonProperty("issue_comment_url") val issueCommentUrl: String = "null",
  @JsonProperty("issue_events_url") val issueEventsUrl: String = "null",
  @JsonProperty("issues_url") val issuesUrl: String = "null",
  @JsonProperty("keys_url") val keysUrl: String = "null",
  @JsonProperty("labels_url") val labelsUrl: String = "null",
  @JsonProperty("languages_url") val languagesUrl: String = "null",
  @JsonProperty("merges_url") val mergesUrl: String = "null",
  @JsonProperty("milestones_url") val milestonesUrl: String = "null",
  @JsonProperty("notifications_url") val notificationsUrl: String = "null",
  @JsonProperty("pulls_url") val pullsUrl: String = "null",
  @JsonProperty("releases_url") val releasesUrl: String = "null",
  @JsonProperty("ssh_url") val sshUrl: String = "null",
  @JsonProperty("stargazers_url") val stargazersUrl: String = "null",
  @JsonProperty("statuses_url") val statusesUrl: String = "null",
  @JsonProperty("subscribers_url") val subscribersUrl: String = "null",
  @JsonProperty("subscription_url") val subscriptionUrl: String = "null",
  @JsonProperty("tags_url") val tagsUrl: String = "null",
  @JsonProperty("teams_url") val teamsUrl: String = "null",
  @JsonProperty("trees_url") val treesUrl: String = "null",
  @JsonProperty("clone_url") val cloneUrl: String = "null",
  @JsonProperty("mirror_url") val mirrorUrl: String? = "null",
  @JsonProperty("hooks_url") val hooksUrl: String = "null",
  @JsonProperty("svn_url") val svnUrl: String = "null",
  @JsonProperty("homepage") val homepage: String? = "null",
  @JsonProperty("language") val language: String? = "null",
  @JsonProperty("forks_count") val forksCount: Int = -1,
  @JsonProperty("stargazers_count") val stargazersCount: Int = -1,
  @JsonProperty("watchers_count") val watchersCount: Int = -1,
  @JsonProperty("size") val size: Int = -1,
  @JsonProperty("default_branch") val defaultBranch: String = "null",
  @JsonProperty("open_issues_count") val openIssuesCount: Int = -1,
  @JsonProperty("is_template") val isTemplate: Boolean = false,
  @JsonProperty("topics") val topics: ArrayList<String> = arrayListOf(),
  @JsonProperty("has_issues") val hasIssues: Boolean = false,
  @JsonProperty("has_projects") val hasProjects: Boolean = false,
  @JsonProperty("has_wiki") val hasWiki: Boolean = false,
  @JsonProperty("has_pages") val hasPages: Boolean = false,
  @JsonProperty("has_downloads") val hasDownloads: Boolean = false,
  @JsonProperty("has_discussions") val hasDiscussions: Boolean = false,
  @JsonProperty("archived") val archived: Boolean = false,
  @JsonProperty("disabled") val disabled: Boolean = false,
  @JsonProperty("visibility") val visibility: String = "null",
  @JsonProperty("pushed_at") val pushedAt: String = "null",
  @JsonProperty("created_at") val createdAt: String = "null",
  @JsonProperty("updated_at") val updatedAt: String = "null",
  @JsonProperty("permissions") val permissions: Permissions = Permissions(),
  @JsonProperty("security_and_analysis") val securityAndAnalysis: SecurityAndAnalysis = SecurityAndAnalysis()

)